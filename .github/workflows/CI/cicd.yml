# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# name: Dvdrental Service CI/CD

# on:
#   push:
#     branches: ["main"]

# permissions:
#   contents: read

# jobs:
#   CI:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: "17"
#           distribution: "temurin"
#       - name: Setup Gradle
#         uses: gradle/gradle-build-action@v2
#       - name: Excetute Gradle build
#         run: ./gradlew build
#       - name: Login to docker hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_TOKEN }}
#       - name: Build Docker image
#         run: docker build -t awesomehan/dvdrental-backend:latest .
#       - name: Publish image to docker hub
#         run:
#           docker push awesomehan/dvdrental-backend:latest
#           # docker push awesomehan/dvdrental-backend:$NEW_TAG

#   CD:
#     needs: CI
#     runs-on: self-hosted
#     steps:
#       - name: Stop current process
#         run: |
#           DOCKER_PROCESS_NAME="dvdrental-backend"
#           DOCKER_PROCESS_COUNT=$(docker ps --filter "name=$DOCKER_PROCESS_NAME" -q | wc -l)

#           if [ $DOCKER_PROCESS_COUNT -gt 0 ]; then
#               docker stop $(docker ps --filter "name=$DOCKER_PROCESS_NAME" -q)
#               echo "stop dvdrental process."
#           else
#               echo "not found the docker process"
#           fi
#       - name: Remove docker previous image
#         run: docker rm -f dvdrental-backend || true
#       - name: Pull Image from docker hub
#         run: docker pull awesomehan/dvdrental-backend:latest
#       - name: Run docker container
#         run: docker run -d -p 8080:8080 --name dvdrental-backend awesomehan/dvdrental-backend:latest
name: Tag test

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu:latest
    steps:
      - run: echo "We did the things!"
